// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Quiz renders without crashing 1`] = `
<RCTSafeAreaView>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "left": 10,
          "opacity": 1,
          "position": "absolute",
        }
      }
      testID="navibationLeftButton"
    >
      <Text
        style={
          {
            "color": "blue",
            "fontSize": 16,
          }
        }
      >
        홈으로
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
        }
      }
    >
      <Text>
        1 / 0
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
          "position": "absolute",
          "right": 10,
        }
      }
      testID="navigationRightButton"
    >
      <Text
        style={
          {
            "color": "green",
            "fontSize": 16,
          }
        }
      />
    </View>
  </View>
  <RCTScrollView
    style={
      {
        "height": "100%",
      }
    }
  >
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "paddingHorizontal": 10,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 22,
            }
          }
        />
        <View
          style={
            {
              "height": 16,
            }
          }
        />
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              {
                "color": "green",
                "fontSize": 26,
              }
            }
          >
            Quiz 
            1
          </Text>
        </View>
        <View
          style={
            {
              "height": 10,
            }
          }
        />
        <Text
          style={
            {
              "fontSize": 26,
            }
          }
        />
        <View
          style={
            {
              "height": 16,
            }
          }
        />
        <View
          style={
            {
              "gap": 10,
              "justifyContent": "flex-start",
            }
          }
        />
        <View
          style={
            {
              "height": 40,
            }
          }
        />
        <View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "green",
                "borderRadius": 10,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="answerSelectButton"
          >
            <Text
              style={
                {
                  "color": "white",
                  "fontSize": 22,
                }
              }
            >
              선택하기
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "height": 100,
          }
        }
      />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
